<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.scmaster.cheesemap.dao.BoardMapper">

    <!--게시물 저장 테스트-->
    <insert id="boardSave" parameterType="Board" useGeneratedKeys="true" keyProperty="boa_id" keyColumn="boa_id">
		INSERT INTO CS_BOARD (
			BOA_ID
			, BOA_CONTENT
			, BOA_CREATE_DATE
			, BOA_LATITUDE
			, BOA_LONGITUDE
			<if test="boa_photo_originalfile != null and boa_photo_savefile != null">
			, BOA_PHOTO_ORIGINALFILE
			, BOA_PHOTO_SAVEFILE
        	</if>
			<if test="boa_video_originalfile != null and boa_video_savefile != null">
			, BOA_VIDEO_ORIGINALFILE
			, BOA_VIDEO_SAVEFILE
			</if>
        	, MEM_ID
        ) VALUES (
			CS_BOARD_SEQ.nextval
			,#{boa_content,jdbcType=CLOB}
			,sysdate,#{boa_latitude}
			,#{boa_longitude}
        	<if test="boa_photo_originalfile != null and boa_photo_savefile != null">
        	,#{boa_photo_originalfile},
        	#{boa_photo_savefile}
        	</if>
        	<if test="boa_video_originalfile != null and boa_video_savefile != null">
        	,#{boa_video_originalfile}
        	,#{boa_video_savefile}
        	</if>
        	,#{mem_id}
        )
        <selectKey keyProperty="boa_id" resultType="String" order="AFTER">
		SELECT
			CS_BOARD_SEQ.currval
		FROM dual
        </selectKey>
    </insert>

    <!-- 태그 저장 -->
    <insert id="tagSave" parameterType="BoardTag">
        INSERT INTO
			CS_BOARD_TAG (
				TAG_NAME,
				BOA_ID
			) VALUES (
				#{tag_name}
				, #{boa_id}
			)
    </insert>

	<!-- 게시글 읽기 -->
	<select id="boardRead" parameterType="String" resultType="Board">
		select
			boa_id
			, boa_content
			, boa_create_date
			, boa_latitude
			, boa_longitude
			, boa_photo_savefile
			, boa_video_savefile
			, mem_id
		from cs_board
		where boa_id=#{boa_id}
	</select>
	
	<!-- 댓글등록 -->
	<insert id="replyWrite" parameterType="BoardComment">
		insert 
		into cs_board_comment(
			com_id
			, com_content
			, mem_id
			, boa_id
		)values(
			cs_board_comment_seq.nextval
			, #{com_content}
			, #{mem_id}
			, #{boa_id}
		)
	</insert>

	<!-- 댓글 삭제 -->
	<delete id="delReply" parameterType="String">
		delete
			cs_board_comment 
		where
			com_id=#{com_id}
	</delete>
	
	<!-- 댓글 읽기 nickname -->
	<select id="getBoaCommentNick" resultType="Hashmap" parameterType="String">
		select
			c.com_id
			, c.com_content
			, c.mem_id
			, c.boa_id
			, m.mem_nickname
		from
			CS_BOARD_COMMENT c join cs_member m
		on c.mem_id=m.mem_id
		where
			boa_id = #{boa_id}
		order by
			com_id desc
	</select>
	
	<!-- 좋아요 등록 -->
	<insert id="likeInsert" parameterType="BoardLike">
		insert 
		into cs_board_like(
			mem_id
			, boa_id
		)values(
			#{mem_id}
			, #{boa_id}
		)
	</insert>
	
	<!-- 좋아요 삭제 -->
	<delete id="likeDelete" parameterType="BoardLike">
		delete
			cs_board_like
		where
			mem_id=#{mem_id}
		and
			boa_id=#{boa_id}
	</delete>
</mapper>