<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 회원정보 처리 SQL -->
<mapper namespace="com.scmaster.cheesemap.dao.MemberMapper">

	<!-- mem_id(email address)중복체크 -->
	<select id="idCheck" parameterType="String" resultType="int">
		select
			count(mem_id)
		from cs_Member
			where mem_id = #{mem_id}
	</select>

	<!-- mem_nickname(nickname address)중복체크 -->
	<select id="nicknameCheck" parameterType="String" resultType="int">
		select
			count(mem_nickname)
		from cs_Member
		where
			mem_nickname = #{mem_nickname}
	</select>

	<!-- CS_MEMBER 회원가입 -->
	<insert id="join" parameterType="Member">
		insert into
			CS_MEMBER
				(mem_id	
				, mem_pw
				, mem_birth
				, mem_gender
				, mem_nickname
				<if test="mem_originalfile != null and mem_savefile != null">
				, mem_originalfile
				, mem_savefile
				</if>
				) values (
					#{mem_id}
					, #{mem_pw}
					, #{mem_birth}
					, #{mem_gender}
					, #{mem_nickname}
					<if test="mem_originalfile != null and mem_savefile != null">
					, #{mem_originalfile}
					, #{mem_savefile}
					</if>
				)
	</insert>

	<!-- CS_MEMBER 본인인증 -->
	<update id="authenticate" parameterType="String">
		update
			CS_MEMBER
		set
			mem_check=1
		where
			mem_id=#{mem_id}
	</update>
	

	<select id="searchMember" parameterType="String" resultType="Member">
		select
			mem_id
			, mem_pw
			, mem_birth
			, mem_gender
			, mem_nickname
			, TO_CHAR(mem_join_date, 'yyyyMMdd') mem_join_date
			, TO_CHAR(mem_leave_date,'yyyyMMdd') mem_leave_date
			, mem_originalfile
			, mem_savefile
		from
			CS_MEMBER
		where
			mem_id=#{mem_id}
		and
			MEM_CHECK=1
	</select>

</mapper>