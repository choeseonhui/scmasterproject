<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 마이메뉴 처리 SQL -->
<mapper namespace="com.scmaster.cheesemap.dao.TimelineMapper">
	<select id="getTimeline" resultType="Board" parameterType="String">
		select
			boa_id
			, boa_content
			, boa_create_date
			, boa_modify_date
			, boa_latitude
			, boa_longitude
			, boa_photo_savefile
			, boa_photo_originalfile
			, boa_video_originalfile
			, boa_video_savefile
			, mem_id
		from
			CS_BOARD
		where
			boa_id = #{boa_id}
		and
			boa_delete_date is null
	</select>
	
	<select id="getBoardComment" resultType="BoardComment" parameterType="String">
		select
			com_id
			, com_content
			, com_create_date
			, com_modify_date
			, mem_id
			, boa_id
		from
			CS_BOARD_COMMENT
		where
			boa_id = #{boa_id}
	</select>
	
	<select id="getBoardTag"  resultType="BoardTag" parameterType="String">
		select
			tag_name
			, boa_id
		from
			CS_BOARD_TAG
		where
			boa_id = #{boa_id}
		order by
			tag_name
	</select>
	
	<select id="getBoardLike" resultType="BoardLike" parameterType="String">
		select
			mem_id
			, boa_id
		from
			CS_BOARD_LIKE
		where
			boa_id = #{boa_id}
	</select>
	
	<select id="followCheck" resultType="String" parameterType="String">
		select
			FOL_FOLLOWING
		from
			CS_FOLLOW
		where
			FOL_FOLLOWER = #{fol_follower}
		and
			FOL_FOLLOWING = #{fol_following}
	</select>
	
	<insert id="followAdd" parameterType="Follow">
		insert into
			CS_Follow (
				fol_follower
				, fol_following
			) values (
				#{fol_follower}
				, #{fol_following}
			)
	</insert>
	
	<delete id="followRemove" parameterType="Follow">
		delete from
			CS_Follow
		where
			fol_follower = #{fol_follower}
		and
			fol_following = #{fol_following}
	</delete>
	
	<update id="deleteBoard" parameterType="String">
		update
			CS_BOARD
		set
			boa_delete_date = sysdate
		where
			boa_id = #{boa_id}
	</update>
	
	<delete id="deleteBoardTag" parameterType="String">
		delete from
			CS_BOARD_TAG
		where	
			boa_id = #{boa_id}
	</delete>

	<select id="getBoardByDivision" parameterType="String" resultType="Board">
	SELECT
		boa_id
		, <![CDATA[CASE 
		WHEN INSTR(BOA_CONTENT,'<img')= 0 AND INSTR(BOA_CONTENT,'<video')= 0
		THEN BOA_CONTENT
		WHEN INSTR(BOA_CONTENT,'<video')= 0
		THEN SUBSTR(BOA_CONTENT,1,INSTR(BOA_CONTENT,'<img')-1)||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')),'>'))
      	WHEN INSTR(BOA_CONTENT,'<img')= 0
		THEN SUBSTR(BOA_CONTENT,1,INSTR(BOA_CONTENT,'<video')-1)||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')),'/video>')+6)
      	WHEN (INSTR(BOA_CONTENT,'<img') < INSTR(BOA_CONTENT,'<video')) AND INSTR(BOA_CONTENT,'<video') != 0
		THEN SUBSTR(BOA_CONTENT,1,INSTR(BOA_CONTENT,'<img')-1)||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')),'>'),INSTR(BOA_CONTENT,'<video')-(INSTR(BOA_CONTENT,'<img')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')),'>')))||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')),'/video>')+6) 
       	WHEN (INSTR(BOA_CONTENT,'<img') > INSTR(BOA_CONTENT,'<video')) AND INSTR(BOA_CONTENT,'<video') != 0
		THEN SUBSTR(BOA_CONTENT,1,INSTR(BOA_CONTENT,'<video')-1)||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')),'/video>')+6,INSTR(BOA_CONTENT,'<img')-(INSTR(BOA_CONTENT,'<video')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<video')),'/video>')+6))||
       		 SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')+INSTR(SUBSTR(BOA_CONTENT,INSTR(BOA_CONTENT,'<img')),'>'))
       	END	AS BOA_CONTENT]]>
		, to_char(boa_create_date, 'YYYY.MM.DD, DAY PM HH12:MI') boa_create_date
		, boa_latitude
		, boa_longitude
		, boa_photo_savefile
		, boa_video_savefile
		, mem_id
	from
		CS_BOARD
	where
		boa_id=#{boa_id}
	</select>
	
	<select id="getTimelineMap" parameterType="java.util.ArrayList" resultType="MyMap">
		SELECT
			T1.MAP_ID,
		    T1.MAP_CONTENT,
		    T1.MAP_CREATE_DATE,
		    T3.MEM_NICKNAME,
		    <![CDATA[LISTAGG(TAG_NAME,'~') WITHIN GROUP(ORDER BY TAG_NAME) AS MAP_TAG]]>  
		FROM
			CS_MYMAP T1,
		    CS_MYMAP_TAG T2,
		    CS_MEMBER T3
		WHERE
			T1.MAP_ID = T2.MAP_ID
		AND
			T1.MEM_ID = T3.MEM_ID
		<if test="array != null">
		AND
			T1.MAP_ID IN (
				<foreach collection="array" item="a" separator=",">
				#{a}
		    	</foreach>
			)
	    </if>
		GROUP BY T1.MAP_ID,
		    T1.MAP_CONTENT,
		    T1.MAP_CREATE_DATE,
		    T3.MEM_NICKNAME
		ORDER BY
			T1.MAP_CREATE_DATE DESC
	</select>
	
	<select id="getBoardListByMapID" parameterType="String" resultType="MapToBoard">
		select 
			mtb.mtb_route
			, b.boa_id
			, mtb.map_id
			, b.boa_latitude
			, b.boa_longitude
		from
			CS_BOARD b
			, CS_MAP_TO_BOARD mtb
		where
			b.boa_id=mtb.boa_id
		and
			mtb.map_id=#{map_id} 
	</select>
</mapper>
